{
    "type": "virtual",
    "dependencies": [
        {
            "namespace": "std",
            "name": "Typography"
        },
        {
            "namespace": "std",
            "name": "Divider"
        },
        {
            "namespace": "std",
            "name": "Div"
        },
        {
            "namespace": "std",
            "name": "SlotSpan"
        },
        {
            "namespace": "std",
            "name": "GridRow"
        },
        {
            "namespace": "std",
            "name": "GridCol"
        },
        {
            "namespace": "std",
            "name": "Button"
        },
        {
            "namespace": "std",
            "name": "HTMLText"
        },
        {
            "namespace": "std",
            "name": "SlotBlock"
        }
    ],
    "virtualDom": {
        "ROOT": {
            "type": {
                "resolvedName": "ComponentRenderer"
            },
            "isCanvas": true,
            "props": {},
            "displayName": "ROOT",
            "custom": {},
            "hidden": false,
            "nodes": [
                "CKRupuRkv7",
                "nxW8EhU4lK",
                "JQ9GKPczqQ",
                "s_Zj7aIgag",
                "v1PrVAUt46"
            ],
            "linkedNodes": {}
        },
        "CKRupuRkv7": {
            "type": {
                "resolvedName": "std.Typography"
            },
            "isCanvas": false,
            "props": {
                "text": "测试组件",
                "domType": "title",
                "level": 3
            },
            "displayName": "Typography",
            "custom": {
                "propsMapper": {},
                "displayName": "标题"
            },
            "parent": "ROOT",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {}
        },
        "nxW8EhU4lK": {
            "type": {
                "resolvedName": "std.Divider"
            },
            "isCanvas": true,
            "props": {
                "orientation": "right"
            },
            "displayName": "Divider",
            "custom": {
                "propsMapper": {},
                "displayName": "标题分割线"
            },
            "parent": "ROOT",
            "hidden": false,
            "nodes": [
                "AUZoJA2ljW"
            ],
            "linkedNodes": {}
        },
        "AUZoJA2ljW": {
            "type": {
                "resolvedName": "std.Typography"
            },
            "isCanvas": false,
            "props": {
                "text": "Test Component",
                "domType": "text",
                "type": "secondary",
                "italic": true
            },
            "displayName": "Typography",
            "custom": {
                "propsMapper": {},
                "displayName": "分割线文本"
            },
            "parent": "nxW8EhU4lK",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {}
        },
        "JQ9GKPczqQ": {
            "type": {
                "resolvedName": "std.Div"
            },
            "isCanvas": true,
            "props": {},
            "displayName": "Div",
            "custom": {
                "displayName": "说明"
            },
            "parent": "ROOT",
            "hidden": false,
            "nodes": [
                "8NI-SAtkaY",
                "DG4LfAmP3P"
            ],
            "linkedNodes": {}
        },
        "8NI-SAtkaY": {
            "type": {
                "resolvedName": "std.Typography"
            },
            "isCanvas": false,
            "props": {
                "text": "本组件将展示一个基本的虚拟组件结构。",
                "domType": "text"
            },
            "displayName": "Typography",
            "custom": {
                "propsMapper": {},
                "displayName": "文本"
            },
            "parent": "JQ9GKPczqQ",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {}
        },
        "DG4LfAmP3P": {
            "type": {
                "resolvedName": "std.SlotSpan"
            },
            "isCanvas": false,
            "props": {
                "name": "说明"
            },
            "displayName": "Slot",
            "custom": {
                "displayName": "行级插槽",
                "propsMapper": {}
            },
            "parent": "JQ9GKPczqQ",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {}
        },
        "s_Zj7aIgag": {
            "type": {
                "resolvedName": "std.GridRow"
            },
            "isCanvas": false,
            "props": {
                "colNum": 3,
                "gutter": 12,
                "align": "middle",
                "justify": "space-around"
            },
            "displayName": "GridRow",
            "custom": {
                "propsMapper": {},
                "displayName": "三栏"
            },
            "parent": "ROOT",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {
                "0": "mk6N62q6Vu",
                "1": "U8HC8G7I0d",
                "2": "AIZzPvotMh"
            }
        },
        "mk6N62q6Vu": {
            "type": {
                "resolvedName": "std.GridCol"
            },
            "isCanvas": true,
            "props": {
                "span": 4
            },
            "displayName": "GridCol",
            "custom": {
                "propsMapper": {},
                "displayName": "左边栏"
            },
            "parent": "s_Zj7aIgag",
            "hidden": false,
            "nodes": [
                "57DOuGsnTk"
            ],
            "linkedNodes": {}
        },
        "57DOuGsnTk": {
            "type": {
                "resolvedName": "std.Button"
            },
            "isCanvas": true,
            "props": {
                "onClick": "state.add",
                "size": "large",
                "type": "primary"
            },
            "displayName": "Button",
            "custom": {
                "propsMapper": {},
                "displayName": "增加按钮"
            },
            "parent": "mk6N62q6Vu",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {
                "content": "GzHZwwnTwE"
            }
        },
        "GzHZwwnTwE": {
            "type": {
                "resolvedName": "std.HTMLText"
            },
            "isCanvas": false,
            "props": {
                "text": "+1",
                "domType": "text"
            },
            "displayName": "HTMLText",
            "custom": {
                "propsMapper": {
                    "text": "fmtExpr"
                }
            },
            "parent": "57DOuGsnTk",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {}
        },
        "U8HC8G7I0d": {
            "type": {
                "resolvedName": "std.GridCol"
            },
            "isCanvas": true,
            "props": {
                "span": 12
            },
            "displayName": "GridCol",
            "custom": {
                "displayName": "内容"
            },
            "parent": "s_Zj7aIgag",
            "hidden": false,
            "nodes": [
                "dbKoPzwq54",
                "u7G3ShvgAV",
                "c62fya0mon"
            ],
            "linkedNodes": {}
        },
        "dbKoPzwq54": {
            "type": {
                "resolvedName": "std.Typography"
            },
            "isCanvas": false,
            "props": {
                "text": "当前的状态下的NUM",
                "domType": "title",
                "level": 4
            },
            "displayName": "Typography",
            "custom": {
                "propsMapper": {},
                "displayName": "二级标题"
            },
            "parent": "U8HC8G7I0d",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {}
        },
        "u7G3ShvgAV": {
            "type": {
                "resolvedName": "std.Divider"
            },
            "isCanvas": true,
            "props": {},
            "displayName": "Divider",
            "custom": {
                "displayName": "分割线"
            },
            "parent": "U8HC8G7I0d",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {}
        },
        "c62fya0mon": {
            "type": {
                "resolvedName": "std.Typography"
            },
            "isCanvas": false,
            "props": {
                "text": "num: #{state.num}",
                "domType": "text"
            },
            "displayName": "Typography",
            "custom": {
                "propsMapper": {
                    "text": "fmtExpr"
                },
                "displayName": "计数"
            },
            "parent": "U8HC8G7I0d",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {}
        },
        "AIZzPvotMh": {
            "type": {
                "resolvedName": "std.GridCol"
            },
            "isCanvas": true,
            "props": {
                "span": 4
            },
            "displayName": "GridCol",
            "custom": {
                "propsMapper": {},
                "displayName": "右边栏"
            },
            "parent": "s_Zj7aIgag",
            "hidden": false,
            "nodes": [
                "xklqoKVg73"
            ],
            "linkedNodes": {}
        },
        "xklqoKVg73": {
            "type": {
                "resolvedName": "std.Button"
            },
            "isCanvas": true,
            "props": {
                "onClick": "()=>state.add(-1)",
                "size": "large",
                "type": "dashed"
            },
            "displayName": "Button",
            "custom": {
                "propsMapper": {},
                "displayName": "减少按钮"
            },
            "parent": "AIZzPvotMh",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {
                "content": "W-2GbDpIuN"
            }
        },
        "W-2GbDpIuN": {
            "type": {
                "resolvedName": "std.HTMLText"
            },
            "isCanvas": false,
            "props": {
                "text": "-1",
                "domType": "text"
            },
            "displayName": "HTMLText",
            "custom": {
                "propsMapper": {
                    "text": "fmtExpr"
                }
            },
            "parent": "xklqoKVg73",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {}
        },
        "v1PrVAUt46": {
            "type": {
                "resolvedName": "std.SlotBlock"
            },
            "isCanvas": false,
            "props": {
                "name": "末尾"
            },
            "displayName": "Slot",
            "custom": {
                "displayName": "块级插槽",
                "propsMapper": {}
            },
            "parent": "ROOT",
            "hidden": false,
            "nodes": [],
            "linkedNodes": {}
        }
    },
    "descriptor": {
        "namespace": "hello",
        "name": "StdComponent"
    },
    "meta": {
        "_editor": {
            "useSetupStates": {
                "compiledSrc": "\n      const exports = {};\n      \"use strict\";Object.defineProperty(exports, \"__esModule\", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var _react = require('react'); var _react2 = _interopRequireDefault(_react);\n\n function useScript() {\n  const [num, setNum] = _react.useState.call(void 0, 1);\n  _react.useEffect.call(void 0, ()=>{\n    console.log('测试组件载入');\n  }, []);\n  return {\n    num,\n    add(offset) {\n      if(isNaN(offset)) offset=1;\n      setNum(n=>n+offset);\n    }\n  };\n} exports.default = useScript;\n\n      return exports;\n    ",
                "src": "import React, { useState, useEffect } from 'react';\n\nexport default function useScript() {\n  const [num, setNum] = useState(1);\n  useEffect(()=>{\n    console.log('测试组件载入');\n  }, []);\n  return {\n    num,\n    add(offset) {\n      if(isNaN(offset)) offset=1;\n      setNum(n=>n+offset);\n    }\n  };\n}\n",
                "parser": "JSXParser",
                "langType": "tsx"
            }
        }
    }
}